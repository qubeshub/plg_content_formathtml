<?php
/**
 * HUBzero CMS
 *
 * Copyright 2005-2011 Purdue University. All rights reserved.
 *
 * This file is part of: The HUBzero(R) Platform for Scientific Collaboration
 *
 * The HUBzero(R) Platform for Scientific Collaboration (HUBzero) is free
 * software: you can redistribute it and/or modify it under the terms of
 * the GNU Lesser General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * HUBzero is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * HUBzero is a registered trademark of Purdue University.
 *
 * @package   hubzero-cms
 * @author    Christopher Smoak <csmoak@purdue.edu>
 * @copyright Copyright 2005-2011 Purdue University. All rights reserved.
 * @license   http://www.gnu.org/licenses/lgpl-3.0.html LGPLv3
 */

// Check to ensure this file is included in Joomla!
defined('_JEXEC') or die('Restricted access');


// define path to macros
$path = PATH_CORE . DS . 'plugins' . DS . 'content' . DS . 'formathtml' . DS . 'macros';

// get all macro files
$files = JFolder::files($path, '.', true, true, array('CVS', '.DS_Store', '__MACOSX', 'macro-assets'));

// include base macro class
require_once $path . DS . '..' . DS . 'macro.php';

// include each macro
foreach ($files as $file)
{
	require_once $file;	
}

// anonymous function to get macros description
$macroAttributes = function($class) {
	if (is_subclass_of($class, 'Plugins\Content\Formathtml\Macro'))
	{
		$macroClass = new $class();
		if (method_exists($macroClass, 'description'))
		{
			$nameParts = explode("\\", str_replace('Plugins\\Content\\Formathtml\\Macros\\', '', $class));
			$name = '[[' . implode('.', $nameParts) . '(args)]]';
			$namespace = (count($nameParts) > 1) ? $nameParts[0] : 'general';
			$desc = $macroClass->description();
			if ($desc == '')
			{
				return;
			}
			return array('namespace' => ucfirst($namespace), 'name' => $name, 'description' => $desc);
		}
	}
};

// get macro description html
$macrosNameAndDesc = array_values(array_filter(array_map($macroAttributes, get_declared_classes())));

// group according to namepace
$macrosList = array();
foreach ($macrosNameAndDesc as $macroNameAndDesc)
{
	if (!isset($macrosList[$macroNameAndDesc['namespace']]))
	{
		$macrosList[$macroNameAndDesc['namespace']] = array();
	}

	array_push($macrosList[$macroNameAndDesc['namespace']], $macroNameAndDesc);
}
?>
<h1 class="page-title">HTML Macros</h1>
<p>Below is a list of available macros, useful for generating dynamic content in HTML.</p>

<?php foreach ($macrosList as $namespace => $macros) : ?>
	<h3><?php echo $namespace; ?> Macros</h3>
	<dl>
		<?php foreach ($macros as $macro) : ?>
			<dt><?php echo $macro['name']; ?></dt>
			<dd><?php echo $macro['description']; ?></dd>
		<?php endforeach; ?>
	</dl>
<?php endforeach; ?>